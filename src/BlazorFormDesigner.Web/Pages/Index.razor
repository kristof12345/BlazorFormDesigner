@page "/"

@if (UserService.User == null)
{
    <LoginForm />
}
else
{
    <div style="margin-top: 100px">
        <MatH4 Class="center-text" Style="margin-bottom: 40px;">Welcome @UserService.User.Name</MatH4>
        <MainMenu />
    </div>

    <Container Width="1452px" Top="80px" Bottom="70px">
        @if (Forms != null)
        {
            <h3 style="margin: 20px;">Recently added forms</h3>
            @foreach (var form in Forms.Where(f => f.Status == FormStatus.Available))
            {
                <AvailableForm Form=@form OnDismiss=@Dismiss />
            }
        }
    </Container>
}

@code {

    [Inject]
    private UserService UserService { get; set; }

    [Inject]
    private FormService FormService { get; set; }

    private IEnumerable<Form> Forms { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Forms = await FormService.GetAll();
    }

    protected override void OnInitialized()
    {
        UserService.LoginEvent += OnLogin;
    }

    private async Task OnLogin()
    {
        await InvokeAsync(() => { StateHasChanged(); });
    }

    public async void Dismiss(string id)
    {
        await FormService.Dismiss(id);
        Forms = await FormService.GetAll();
        this.StateHasChanged();
    }
}
