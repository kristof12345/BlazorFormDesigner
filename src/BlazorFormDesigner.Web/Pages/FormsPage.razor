@page "/forms"

<Container Width="1452px" Top="80px" Bottom="70px">
    @if (Forms != null)
    {
        <h3 style="margin: 20px;">Available forms</h3>
        @foreach (var form in Forms.Where(f => f.Status == FormStatus.Available))
        {
            <AvailableForm Form=@form OnDismiss=@Dismiss />
        }
        <h3 style="margin: 20px;">Answered forms</h3>
        @foreach (var form in Forms.Where(f => f.Status == FormStatus.Answered))
        {
            <AnsweredForm Form=@form />
        }
        <h3 style="margin: 20px;">Upcoming forms</h3>
        @foreach (var form in Forms.Where(f => (f.Status == FormStatus.Upcoming)))
        {
            <UpcomingForm Form=@form />
        }
        <h3 style="margin: 20px;">Expired or dismissed forms</h3>
        @foreach (var form in Forms.Where(f => (f.Status == FormStatus.Dismissed || f.Status == FormStatus.Expired)))
        {
            <DismissedForm Form=@form />
        }
    }
</Container>

@code {
    [Inject]
    private FormService FormService { get; set; }

    private IEnumerable<Form> Forms { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Forms = await FormService.GetAll();
    }

    public async void Dismiss(string id)
    {
        await FormService.Dismiss(id);
        Forms = await FormService.GetAll();
        this.StateHasChanged();
    }
}
