<MatH5 Class="center-text">@Question.Title</MatH5>
<MatH6 Class="center-text" Style="margin: 20px;">@Question.Description</MatH6>
<Horizontal>
    @if (Details != null)
    {
        @if (Question.IsCorrected)
        {
            <Vertical>
                <PieDiagram Data=@FormatPieData()></PieDiagram>
                <BarDiagram Data=@FormatBarData()></BarDiagram>
            </Vertical>
        }
    }
</Horizontal>

@code {

    [Parameter]
    public string FormId { get; set; }

    [Parameter]
    public Question Question { get; set; }

    [Inject]
    private AnswerService AnswerService { get; set; }

    private AnswerDetails Details { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Details = await AnswerService.GetDetails(FormId, Question.Id);
    }

    private List<ChartData> FormatPieData()
    {
        var data = new List<ChartData>();
        data.Add(new ChartData { Id = "Correct", Data = Details.CorrectAnswers, Color = "green" });
        data.Add(new ChartData { Id = "Incorrect", Data = Details.IncorrectAnswers, Color = "red" });
        return data;
    }

    private List<ChartData> FormatBarData()
    {
        var data = new List<ChartData>();
        foreach (var item in Details.Answers.Keys.Select((key, index) => new { index, key }))
        {
            data.Add(new ChartData { Id = item.key, Data = Details.Answers[item.key], Color = Colors.Palettes[item.index] });
        }
        return data;
    }

}
